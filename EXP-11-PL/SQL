REM   Script: Exercise 11 function
REM   PL/SQL exercise 11

create or replace function adder(n1 in number, n2 in number) 
return number 
is 
n3 number(8); 
begin 
n3 :=n1+n2; 
return n3; 
end; 
/

DECLARE 
n3 number(2); 
BEGIN 
n3 := adder(11,22); 
dbms_output.put_line('Addition is: ' || n3); 
END; 
/

create or replace function fact(n number) 
return number is 
i number(10); 
f number:=1; 
begin 
for i in 1..N loop 
f:=f*i; 
end loop; 
return f; 
end; 
/

BEGIN 
  factorial := fact(n); 
  DBMS_OUTPUT.PUT_LINE('Factorial of ' || n || ' is: ' || factorial); 
END; 
/

DECLARE 
  n NUMBER := 5; 
  factorial NUMBER; 
BEGIN 
  factorial := fact(n); 
  DBMS_OUTPUT.PUT_LINE('Factorial of ' || n || ' is: ' || factorial); 
END; 
/

CREATE OR REPLACE FUNCTION is_prime(n NUMBER) RETURN BOOLEAN IS 
  i NUMBER := 2; 
BEGIN 
  IF n <= 1 THEN 
    RETURN FALSE; -- 1 is not a prime number 
  END IF; 
   
  WHILE i <= SQRT(n) LOOP 
    IF MOD(n, i) = 0 THEN 
      RETURN FALSE; -- n is divisible by i, so it's not a prime number 
    END IF; 
    i := i + 1; 
  END LOOP; 
   
  RETURN TRUE; -- n is a prime number 
END;
/

DECLARE 
  n NUMBER := 17; 
  is_prime_boolean BOOLEAN; 
BEGIN 
  is_prime_boolean := is_prime(n); 
  IF is_prime_boolean THEN 
    DBMS_OUTPUT.PUT_LINE(n || ' is a prime number'); 
  ELSE 
    DBMS_OUTPUT.PUT_LINE(n || ' is not a prime number'); 
  END IF; 
END; 
/

CREATE OR REPLACE FUNCTION get_salary(empid NUMBER) RETURN NUMBER IS 
  salary NUMBER; 
BEGIN 
  SELECT sal INTO salary FROM emp WHERE empno = empid; 
  RETURN salary; 
EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('Employee with ID ' || empid || ' not found'); 
    RETURN NULL; 
END;
/

CREATE TABLE emp (  
    empno   NUMBER(4) PRIMARY KEY,  
    ename   VARCHAR2(10),  
    job     VARCHAR2(9),  
    mgr     NUMBER(4),  
    hiredate DATE,  
    sal     NUMBER(7,2),  
    comm    NUMBER(7,2),  
    deptno  NUMBER(2)  
) 
;

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)  
VALUES (7369, 'SMITH', 'CLERK', 7902, TO_DATE('17-DEC-80', 'DD-MON-YY'), 800, 7499, 20);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)  
VALUES (7499, 'ALLEN', 'SALESMAN', 7698, TO_DATE('20-FEB-81', 'DD-MON-YY'), 1600, 7521, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) VALUES (7521, 'WARD', 'SALESMAN', 7698, TO_DATE('22-FEB-81', 'DD-MON-YY'), 1250, 300, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7566, 'JONES', 'MANAGER', 7839, TO_DATE('02-APR-81', 'DD-MON-YY'), 2975, NULL, 20);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7654, 'MARTIN', 'SALESMAN', 7698, TO_DATE('28-SEP-81', 'DD-MON-YY'), 1250, 1400, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7698, 'BLAKE', 'MANAGER', 7839, TO_DATE('01-MAY-81', 'DD-MON-YY'), 2850, NULL, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7782, 'CLARK', 'MANAGER', 7839, TO_DATE('09-JUN-81', 'DD-MON-YY'), 2450, NULL, 10);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7788, 'SCOTT', 'ANALYST', 7566, TO_DATE('19-APR-87', 'DD-MON-YY'), 3000, NULL, 20);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7839, 'KING', 'PRESIDENT', NULL, TO_DATE('17-NOV-81', 'DD-MON-YY'), 5000, NULL, 10);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7844, 'TURNER', 'SALESMAN', 7698, TO_DATE('08-SEP-81', 'DD-MON-YY'), 1500, 0, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7876, 'ADAMS', 'CLERK', 7788, TO_DATE('23-MAY-87', 'DD-MON-YY'), 1100, NULL, 20);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7900, 'JAMES', 'CLERK', 7698, TO_DATE('03-DEC-81', 'DD-MON-YY'), 950, NULL, 30);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7902, 'FORD', 'ANALYST', 7566, TO_DATE('03-DEC-81', 'DD-MON-YY'), 3000, NULL, 20);

INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)VALUES (7934, 'MILLER', 'CLERK', 7782, TO_DATE('23-JAN-82', 'DD-MON-YY'), 1300, NULL, 10);

CREATE OR REPLACE FUNCTION get_salary(empid NUMBER) RETURN NUMBER IS 
  salary NUMBER; 
BEGIN 
  SELECT sal INTO salary FROM emp WHERE empno = empid; 
  RETURN salary; 
EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('Employee with ID ' || empid || ' not found'); 
    RETURN NULL; 
END;
/

DECLARE 
  empid NUMBER := 7369; 
  salary NUMBER; 
BEGIN 
  salary := get_salary(empid); 
  IF salary IS NOT NULL THEN 
    DBMS_OUTPUT.PUT_LINE('Salary of employee with ID ' || empid || ' is ' || salary); 
  END IF; 
END; 
/

